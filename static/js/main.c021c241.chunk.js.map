{"version":3,"sources":["Component/Manager.js","Component/Login.js","Component/ComicEdit.js","Component/Home.js","App.js","serviceWorker.js","index.js"],"names":["Manager","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setListComics","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","setState","listComics","data","newDatas","openForm","newComicName","newComicImage","newComicAuthor","newComicChapterOne","t0","alert","message","stop","addComic","_callee2","newTempComic","_context2","state","Name","Image","Author","ChapterOne","newComic","post","ComicInfo","removeComic","_ref3","_callee3","id","URL","_context3","delete","_x","apply","arguments","renderComic","bind","assertThisInitialized","addComicForm","comic","_this2","react_default","createElement","className","style","backgroundColor","marginBottom","borderRadius","margin","name","react_router_dom","to","onClick","_this3","placeholder","onChange","evt","target","value","width","_this4","map","c","Component","Login","onLogin","_this$state","txtUsername","txtPassword","username","password","success","history","push","src","scrolling","height","border","padding","overflow","allowtransparency","type","ComicEdit","match","params","idcomic","listChapters","Chapters","editChapter","newOrder","newLink","put","order","link","renderChapters","addChapterForm","Chapter","Link","PrivateRoute","_ref","component","isAuthenticated","rest","objectWithoutProperties","react_router","assign","render","pathname","from","location","Home","exact","path","Login_Login","App","Home_Home","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c021c241.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link} from \"react-router-dom\";\nimport axios from 'axios'\nexport default class Manager extends Component {\nconstructor(props){\n    super(props)\n    this.state={listComics:[], openForm:false, newComicName:'', newComicImage:'', newComicAuthor:'', newComicChapterOne:'' , \n    newComic:{Name:'', Image:'',Author:'', ChapterOne:''}}\n    this.renderComic= this.renderComic.bind(this)\n    this.addComicForm= this.addComicForm.bind(this)\n}\ncomponentWillMount(){\n    this.setListComics();\n}\nsetListComics = async() => {\n  try {\n      const response = await axios.get(\"https://dinh-test-v1.herokuapp.com/comic\")\n      this.setState({listComics : response.data.newDatas,\n                        openForm:false,\n                        newComicName:'',\n                        newComicImage:'',\n                        newComicAuthor:'',\n                        newComicChapterOne:'' });\n      \n  } catch (error) {\n      alert(error.message)\n  }   \n}\naddComic = async() =>{\n    try {\n        if(this.state.newComicName!=='' && this.state.newComicImage!== '' && this.state.newComicAuthor !== '' && this.state.newComicChapterOne!==''){\n            const newTempComic = {Name:this.state.newComicName,\n                Image:this.state.newComicImage,\n                Author:this.state.newComicAuthor,\n                ChapterOne:this.state.newComicChapterOne}\n            await this.setState({newComic:newTempComic})\n            const URL = 'https://dinh-test-v1.herokuapp.com/comic/add';\n            const response = await axios.post(URL, {ComicInfo:this.state.newComic});\n            alert(response.data.message) \n            this.setListComics();\n        }\n        else{\n            alert('Không được để trống')\n        }    \n    } catch (error) {\n        alert(error.message)\n    }\n}\nremoveComic = async(id) =>{\n    const URL = 'https://dinh-test-v1.herokuapp.com/comic/' + id;\n    const response = await axios.delete(URL)\n    alert(response.data.message)\n    this.setListComics();\n}\nrenderComic(comic){\n    const URL = \"/manager/\"+ comic.id;\n    return(\n        <div className=\"d-flex\" style={{backgroundColor:'#dfe3ee', marginBottom:'10px',borderRadius:'5px'}}>\n                <h3 className=\"text-success col-md\" style={{margin:'10px'}}>Comic Name: </h3>\n                <h3 className=\"text col-md\" style={{margin:'10px'}}>{comic.name}</h3>\n                <div className=\"btn-container col-md\">\n                <Link to={URL}>\n                <button className= \"btn btn-success\" style={{margin:'10px'}}\n                    onClick={()=>{}}\n                    >See Chapter List</button>\n                </Link>\n                <button className=\"btn btn-warning\" style={{margin:'10px'}}\n                onClick={()=>this.removeComic(comic.id)}\n                >Remove Chapter</button>\n                </div>\n            </div>\n    )\n}\n\naddComicForm(){\n    if(!this.state.openForm) return(\n        <button \n          className=\"btn btn-success\"\n          style={{width : 200 , margin : 10}}\n          onClick={()=>{this.setState({openForm:true})}}>\n                Add Comic\n        </button>\n     )\n     return(\n      <div className=\"form-group word-from\" >\n          <input\n              placeholder=\"Tên Truyện\"\n              className=\"form-control\"\n              onChange={evt => this.setState({newComicName : evt.target.value})}/>\n          <input\n              placeholder=\"Link ảnh giới thiệu\"\n              className=\"form-control\"\n              onChange={evt => this.setState({newComicImage : evt.target.value})}/>\n        <input\n              placeholder=\"Link chapter thứ nhất\"\n              className=\"form-control\"\n              onChange={evt => this.setState({newComicChapterOne : evt.target.value})}/>\n        <input\n              placeholder=\"Tác giả\"\n              className=\"form-control\"\n              onChange={evt => this.setState({newComicAuthor : evt.target.value})}/>\n          <br />\n          <div className=\"btn-container\">\n              <button \n                  className=\"btn btn-success\"\n                  onClick={this.addComic}>\n                  Add comic\n              </button>\n              <button\n                  className=\"btn btn-danger\"\n                  onClick={()=>{this.setState({openForm:false})}}>\n                  Cancel\n              </button>\n          </div>\n      </div> \n     )\n}\n\n    render() {\n    return(\n    <div className=\"word\" style={{margin:'5%', width:'90%'}}>\n        {this.addComicForm()}\n      {this.state.listComics.map(c=>this.renderComic(c))}\n    </div>  \n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link} from \"react-router-dom\";\nimport axios from 'axios'\n\nexport default class Login extends Component {\n    constructor(props){\n        super(props)\n        this.state={txtUsername:'',txtPassword:''}\n    }\n    onLogin = async () => {\n        try {\n            const {txtUsername , txtPassword} = this.state;\n            if(txtUsername!=='Admin'){\n                alert('Bạn cần đăng nhập dưới quyền admin')\n            }\n            else{\n                const URL = 'https://dinh-test-v1.herokuapp.com/user/signin'\n                const response = await axios.post(URL, {username:txtUsername,password:txtPassword});\n                if(response.data.success===true){\n                this.props.onLogin()\n                this.props.history.push('/manager');\n            }\n            else{\n              alert(response.data.message);\n            }\n            }\n    \n        } catch (error) {\n          alert(error.message)\n        }\n      }\n    render() {\n    return (\n        <div className=\"container\">\n        <div className=\"d-flex justify-content-center mt-5\">\n            <div className=\"card\">\n            <div>\n            <iframe src=\"//adv-net.systems.vn/codes/banner?rcd=Mjk=\" scrolling=\"no\" style={{width:728, height:90, border:0, padding:0, overflow:'hidden'}} allowtransparency=\"true\"></iframe>\n            </div>\n                <div className=\"card-header\">\n                    <h3>Sign In</h3>\n                </div>\n                <div className=\"card-body\">\n                    <form>\n                        <div className=\"input-group form-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\"><i className=\"fa fa-user\"></i></span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"username\"\n                            onChange={evt => this.setState({txtUsername : evt.target.value})}/>\n                        </div>\n                        <div className=\"input-group form-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\"><i className=\"fa fa-key\"></i></span>\n                            </div>\n                            <input type=\"password\" className=\"form-control\" placeholder=\"password\"\n                            onChange={evt => this.setState({txtPassword : evt.target.value})}/>\n                        </div>\n                        <div className=\"form-group\">\n                        <Link to=\"/manager\">\n                        <button className=\"btn btn-success float-right\" onClick={ this.onLogin}>\n                        Login</button>\n                        </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n//Hello{this.props.match.params.idcomic}\nexport default class ComicEdit extends Component {\n  constructor(props){\n    super(props)\n    this.state={listChapters:[], openForm:false, newOrder:'', newLink:''}\n    this.renderChapters= this.renderChapters.bind(this)\n    this.addChapterForm= this.addChapterForm.bind(this)\n}\ncomponentWillMount(){\n    this.setListComics();\n}\nsetListComics = async() => {\n  try {\n    const URL = \"https://dinh-test-v1.herokuapp.com/comic/\" + this.props.match.params.idcomic;\n      const response = await axios.get(URL)\n      this.setState({listChapters : response.data.newDatas.Chapters,openForm:false});\n      \n  } catch (error) {\n      alert(error.message)\n  }   \n}\neditChapter = async() =>{\n    try {\n      const {newOrder,newLink}=this.state;\n        if(newOrder!==''&&newLink!==''){\n            const URL = 'https://dinh-test-v1.herokuapp.com/comic/add/'+ this.props.match.params.idcomic;\n            const response = await axios.put(URL, {order:newOrder,link:newLink});\n            alert(response.data.message) \n            this.setListComics();\n        }\n        else{\n            alert('Không được để trống')\n        }    \n    } catch (error) {\n        alert(error.message)\n    }\n}\nrenderChapters(comic){\n    return(\n        <div className=\"d-flex\" style={{backgroundColor:'#dfe3ee', marginBottom:'10px',borderRadius:'5px'}}>\n                <h5 className=\"text-success col-md-2\" style={{margin:'10px'}}>Chapter: {comic.Chapter}</h5>\n                <h5 className=\"text col-md-7\" style={{margin:'10px'}}>{comic.Link}</h5>\n                <div className=\"btn-container col-md-3\">\n                <button className= \"btn btn-success\" style={{margin:'10px'}}\n                    onClick={()=>{this.setState({openForm:true,newOrder:comic.Chapter})}}\n                    >Edit Chapter Link</button>\n                </div>\n            </div>\n    )\n}\n\naddChapterForm(){\n    if(!this.state.openForm) return(\n        <button \n          className=\"btn btn-success\"\n          style={{width : 200 , margin : 10}}\n          onClick={()=>{this.setState({openForm:true,newOrder:''})}}>\n                Add Comic\n        </button>\n     )\n     return(\n      <div className=\"form-group word-from\" >\n          <input\n              placeholder=\"Chapter\"\n              className=\"form-control\"\n              value={this.state.newOrder}\n              onChange={evt => this.setState({newOrder : evt.target.value})}/>\n          <input\n              placeholder=\"Link Chapter\"\n              className=\"form-control\"\n              value={this.state.newLink}\n              onChange={evt => this.setState({newLink : evt.target.value})}/>\n          <br />\n          <div className=\"btn-container\">\n              <button \n                  className=\"btn btn-success\"\n                  onClick={this.editChapter}>\n                  Add comic\n              </button>\n              <button\n                  className=\"btn btn-danger\"\n                  onClick={()=>{this.setState({openForm:false})}}>\n                  Cancel\n              </button>\n          </div>\n      </div> \n     )\n}\n\n    render() {\n    return(\n    <div className=\"word\" style={{margin:'5%', width:'90%'}}>\n        {this.addChapterForm()}\n      {this.state.listChapters.map(c=>this.renderChapters(c))}\n    </div>  \n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Manager from './Manager'\nimport Login from './Login'\nimport ComicEdit from './ComicEdit'\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nfunction PrivateRoute({ component: Component,data:isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\nexport default class Home extends Component {\n  constructor(props){\n    super(props)\n    this.state={isAuthenticated:false}\n    this.onLogin = this.onLogin.bind(this)\n  }\n  onLogin(){\n    this.setState({isAuthenticated:true})\n  }\n  render() {\n    return (\n      <Router>\n      {/* <Route exact path='/' component={isAuthenticatedLogin}/> */}\n      <Route exact path='/' render={(props) => (\n      <Login {...props} onLogin={this.onLogin}/>\n      )}/>\n      <PrivateRoute exact path='/manager' component={Manager} data={this.state.isAuthenticated}  />\n      <PrivateRoute path=\"/manager/:idcomic\" component={ComicEdit} data={this.state.isAuthenticated} />;\n    </Router>\n    )\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Home from './Component/Home'\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}